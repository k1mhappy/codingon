<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form 전송</title>
</head>
<body>
    <h1>Form</h1>

    <h2>Get 요청</h2>
    <form action="/login" method="get">
        <label for="id">ID</label>
        <input type="text" name="id" placeholder="ID는 최소 3글자" id="id" minlength="3">
        <!-- required와 min 등 다른 속성들과 같이사용x -->
        <label for="pw">
            PW
            <input type="password" name="pw" placeholder="PW" id="pw" required> <!--for속성이랑 id속성의 이름을 맞춰줘야 줄이 맞춰지며 동작함-->
        </label>
        <input type="number" name="grade" placeholder="GRADE" max="4"> <!--type이 number인 경우 min / max 로 지정. 지정한 수 이하 이상으로 안넘어감-->

        <!-- form태그 안에 버튼태그를 넣으면 type지정을 안하고 제출버튼 눌러도 타입이 submit이 되어 값이 제출된다. -->
        <button>제출</button>
        <!-- 제출하는게 아니면 버튼타입은 버튼으로 지정하면됨 -->
        <!-- <button type="button">제출</button> -->
    </form>

    <h2>Post 요청</h2>
    <!-- pattern 속성: 폼 요소에 값 입력되었을 때, 그 입력된 값에 대해 검증 . so, 입력한값이 없을 때 검증안하고 걍 제출됨. 패턴과 required는 같이 사용가능-->
    <!-- required 속성: 폼 요소에 값이 반드시 들어가야하는지 여부를 결정 -->

    <form action="/login" method="post">  <!-- action이름이 같아도 상관없다 . why? method가 다르기 때문에 -->
        <label for="id">ID</label>
        <input type="text" name="id" placeholder="ID" id="id"
        pattern="^([a-zA-Z0-9가-힣]){4,}$" title="아이디는 대소문자,숫자,한글로 구성된 4자 이상이여야 합니다" required>
        <label for="pw">
            PW
            <input type="password" name="pw" placeholder="PW" id="pw" pattern="^([a-z0-9]){8,12}$" required>
        </label>
        <button>제출</button>
    </form>

    <h2>JS 유효성 검사</h2>
    <!-- 자바스크립트 폼 유효성 검사 -->
    <form action="/js-form-check" method="post" name="valiForm" 
    onsubmit="return checkForm(this)" 
    target="_blank"> 
    <!--js로 유효성 검사 시, form태그에 onsubmit="return" 후 체크폼이라는 함수를 만들어사용할거임-->
        <input type="text" name="id" minlength="1" placeholder="ID" title="최소 1글자">
        <span>우편물 수령장소</span>
        <input type="checkbox" name="post" value="자택">자택
        <input type="checkbox" name="post" value="회사">회사
        <button>제출</button>
    </form>

    <script>
        // function checkForm(){
        //     // 1) name으로 폼 선택
        //     // const form = document.forms['valiForm'];
        // //2) 47행 this 안써줌
        //     console.log(form);
        // }
        function checkForm(form){
        //2) this로 보내서 매개변수로 받기
        // 47행에 this 써줌
            console.log(form);

        if(form.id.value == ''){
            form.id.focus();
            alert('아이디를 입력해주세요.');

            return false; //얘를 추가했기 때문에 제출버튼을 눌렀을때 새창이 안뜨면서 값제출을 막은거임! 지우면 새창뜨고 값제출함 => 즉 submit 이벤트가 일어나지 않음
        }

        //form태그 안에 있는 각각의 요소들은 name값으로 접근한다 => 각각의 input요소의 name속성값으로 접근
    // checkbox가  둘다 체크가 안되었을때 유효성 검사 
        if((form.post[0].checked == false) && (form.post[1].checked == false)) {
            alert("우편물 수령 장소를 선택해주쇼");
            return false;
        }
        }
    </script>
</body>
</html>